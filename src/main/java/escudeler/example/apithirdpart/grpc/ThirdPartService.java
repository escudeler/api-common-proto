// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ThirdPartService.proto

package escudeler.example.apithirdpart.grpc;

public final class ThirdPartService {
  private ThirdPartService() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AuthorizeResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AuthorizeResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026ThirdPartService.proto\032\022SpeakService.p" +
      "roto\"\'\n\021AuthorizeResponse\022\022\n\nauthorized\030" +
      "\001 \001(\0102F\n\024ThirdPartGrpcService\022.\n\tauthori" +
      "ze\022\r.SpeakRequest\032\022.AuthorizeResponseB\'\n" +
      "#escudeler.example.apithirdpart.grpcP\001b\006" +
      "proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          escudeler.example.apispeak.grpc.SpeakService.getDescriptor(),
        });
    internal_static_AuthorizeResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_AuthorizeResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_AuthorizeResponse_descriptor,
        new java.lang.String[] { "Authorized", });
    escudeler.example.apispeak.grpc.SpeakService.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
